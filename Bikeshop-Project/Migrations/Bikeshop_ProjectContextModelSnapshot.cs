// <auto-generated />
using System;
using Bikeshop_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bikeshop_Project.Migrations
{
    [DbContext(typeof(Bikeshop_ProjectContext))]
    partial class Bikeshop_ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bikeshop_Project.Models.Bicycle", b =>
                {
                    b.Property<decimal>("SERIALNUMBER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("CHAINSTAY")
                        .HasColumnType("float");

                    b.Property<decimal>("COMPONENTLIST")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CONSTRUCTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CUSTOMERID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CUSTOMNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EMPLOYEEID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FRAMEASSEMBLER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FRAMEPRICE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("FRAMESIZE")
                        .HasColumnType("float");

                    b.Property<double>("HEADTUBEANGLE")
                        .HasColumnType("float");

                    b.Property<string>("LETTERSTYLEID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LISTPRICE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MODELTYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ORDERDATE")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PAINTER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PAINTID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SALEPRICE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SALESTATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SALESTAX")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("SEATTUBEANGLE")
                        .HasColumnType("float");

                    b.Property<DateTime>("SHIPDATE")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SHIPEMPLOYEE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SHIPPRICE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("STARTDATE")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("STOREID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("TOPTUBE")
                        .HasColumnType("float");

                    b.Property<decimal>("WATERBOTTLEBRAZEONS")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SERIALNUMBER");

                    b.ToTable("Bicycle");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.BicycleTubeUsage", b =>
                {
                    b.Property<decimal>("id")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("QUANTITY")
                        .HasColumnType("float");

                    b.Property<decimal>("SERIALNUMBER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TUBEID")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("BicycleTubeUsage");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.BikeParts", b =>
                {
                    b.Property<decimal>("id")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("COMPONENTID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DATEINSTALLED")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EMPLOYEEID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LOCATION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("QUANTITY")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SERIALNUMBER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SUBSTITUTEID")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("BikeParts");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.BikeTubes", b =>
                {
                    b.Property<decimal>("ID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("LENGTH")
                        .HasColumnType("float");

                    b.Property<decimal>("SERIALNUMBER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TUBEID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TUBENAME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("BikeTubes");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.City", b =>
                {
                    b.Property<string>("CityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AREACODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CITY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COUNTRY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LATITUDE")
                        .HasColumnType("float");

                    b.Property<double>("LONGITUDE")
                        .HasColumnType("float");

                    b.Property<decimal>("POPULATION1980")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("POPULATION1990")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("POPULATIONCDF")
                        .HasColumnType("float");

                    b.Property<string>("STATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZIPCODE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.CommonSizes", b =>
                {
                    b.Property<decimal>("ID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("FRAMESIZE")
                        .HasColumnType("float");

                    b.Property<string>("MODELTYPE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CommonSizes");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.Component", b =>
                {
                    b.Property<decimal>("COMPONENTID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CATEGORY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ENDYEAR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ESTIMATEDCOST")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("HEIGHT")
                        .HasColumnType("float");

                    b.Property<double>("LENGTH")
                        .HasColumnType("float");

                    b.Property<decimal>("LISTPRICE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MANUFACTURERID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PRODUCTNUMBER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("QUANTITYONHAND")
                        .HasColumnType("float");

                    b.Property<string>("ROAD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("WEIGHT")
                        .HasColumnType("float");

                    b.Property<double>("WIDTH")
                        .HasColumnType("float");

                    b.Property<decimal>("YEAR")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("COMPONENTID");

                    b.ToTable("Component");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.ComponentName", b =>
                {
                    b.Property<string>("COMPONENTNAME")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ASSEMBLYORDER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("COMPONENTNAME");

                    b.ToTable("ComponentName");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.Customer", b =>
                {
                    b.Property<decimal>("CUSTOMERID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ADDRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BALANCEDUE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CITYID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FIRSTNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LASTNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PHONE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZIPCODE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CUSTOMERID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.CustomerTransaction", b =>
                {
                    b.Property<decimal>("id")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AMOUNT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CUSTOMERID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EMPLOYEEID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("REFERENCE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TRANSACTIONDATE")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("CustomerTransaction");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.Employee", b =>
                {
                    b.Property<decimal>("EMPLOYEEID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ADDRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CITYID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CURRENTMANAGER")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DATEHIRED")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DATERELEASED")
                        .HasColumnType("datetime2");

                    b.Property<string>("FIRSTNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HOMEPHONE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LASTNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SALARY")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SALARYGRADE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TAXPAYERID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TITLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WORKAREA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZIPCODE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EMPLOYEEID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.GroupComponents", b =>
                {
                    b.Property<decimal>("id")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("COMPONENTID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GROUPID")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("GroupComponents");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.GroupO", b =>
                {
                    b.Property<decimal>("COMPONENTGROUPID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BIKETYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ENDYEAR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GROUPNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WEIGHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("YEAR")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("COMPONENTGROUPID");

                    b.ToTable("GroupO");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.LetterStyle", b =>
                {
                    b.Property<string>("LETTERSTYLE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LETTERSTYLE");

                    b.ToTable("LetterStyle");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.Manufacturer", b =>
                {
                    b.Property<decimal>("MANUFACTURERID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ADDRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BALANCEDUE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CITYID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CONTACTNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MANUFACTURERNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PHONE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZIPCODE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MANUFACTURERID");

                    b.ToTable("Manufacturer");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.ManufacturerTransaction", b =>
                {
                    b.Property<decimal>("id")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AMOUNT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EMPLOYEEID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MANUFACTURERID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("REFERENCE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TRANSACTIONDATE")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("ManufacturerTransaction");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.ModelSize", b =>
                {
                    b.Property<decimal>("id")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("CHAINSTAY")
                        .HasColumnType("float");

                    b.Property<double>("GROUNDCLEARANCE")
                        .HasColumnType("float");

                    b.Property<double>("HEADTUBEANGLE")
                        .HasColumnType("float");

                    b.Property<string>("MODELTYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MSIZE")
                        .HasColumnType("float");

                    b.Property<double>("SEATTUBEANGEL")
                        .HasColumnType("float");

                    b.Property<double>("TOPTUBE")
                        .HasColumnType("float");

                    b.Property<double>("TOTALLENGTH")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("ModelSize");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.ModelType", b =>
                {
                    b.Property<string>("MODELTYPE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("COMPONENTID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MODELTYPE");

                    b.ToTable("ModelType");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.Paint", b =>
                {
                    b.Property<decimal>("PAINTID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("COLORLIST")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COLORNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COLORSTYLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DATEDISCONTINUED")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DATEINTRODUCED")
                        .HasColumnType("datetime2");

                    b.HasKey("PAINTID");

                    b.ToTable("Paint");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.Preference", b =>
                {
                    b.Property<string>("ITEMNAME")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DATECHANGED")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("VALUE")
                        .HasColumnType("float");

                    b.HasKey("ITEMNAME");

                    b.ToTable("Preference");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.PurchaseItem", b =>
                {
                    b.Property<decimal>("id")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("COMPONENTID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PRICEPAID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PURCHASEID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QUANTITY")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QUANTITYRECEIVED")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("PurchaseItem");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.PurchaseOrder", b =>
                {
                    b.Property<decimal>("PURCHASEID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AMOUNTDUE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DISCOUNT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EMPLOYEEID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MANUFACTURERID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ORDERDATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RECEIVEDATE")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SHIPPINGCOST")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TOTALLIST")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PURCHASEID");

                    b.ToTable("PurchaseOrder");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.RetailStore", b =>
                {
                    b.Property<decimal>("STOREID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ADDRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CITYID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CONTACTFIRSTNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CONTACTLASTNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PHONE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STORENAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZIPCODE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("STOREID");

                    b.ToTable("RetailStore");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.RevisionHistory", b =>
                {
                    b.Property<decimal>("ID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CHANGEDATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("REVISIONCOMMENTS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VERSION")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("RevisionHistory");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.SampleName", b =>
                {
                    b.Property<decimal>("ID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FIRSTNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GENDER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LASTNAME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SampleName");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.SampleStreet", b =>
                {
                    b.Property<decimal>("ID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BASEADDRESS")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SampleStreet");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.StateTaxRate", b =>
                {
                    b.Property<string>("STATE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("TAXRATE")
                        .HasColumnType("float");

                    b.HasKey("STATE");

                    b.ToTable("StateTaxRate");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.TempDateMade", b =>
                {
                    b.Property<DateTime>("DATEVALUE")
                        .HasColumnType("datetime2");

                    b.Property<double>("MADECOUNT")
                        .HasColumnType("float");

                    b.HasKey("DATEVALUE");

                    b.ToTable("TempDateMade");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.TubeMaterial", b =>
                {
                    b.Property<decimal>("TUBEID")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CONSTRUCTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DIAMETER")
                        .HasColumnType("float");

                    b.Property<double>("LISTPRICE")
                        .HasColumnType("float");

                    b.Property<string>("MATERIAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ROUNDNESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("STIFFNESS")
                        .HasColumnType("float");

                    b.Property<double>("THICKNESS")
                        .HasColumnType("float");

                    b.Property<double>("WEIGHT")
                        .HasColumnType("float");

                    b.HasKey("TUBEID");

                    b.ToTable("TubeMaterial");
                });

            modelBuilder.Entity("Bikeshop_Project.Models.WorkArea", b =>
                {
                    b.Property<string>("WORKAREAID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WORKAREAID");

                    b.ToTable("WorkArea");
                });
#pragma warning restore 612, 618
        }
    }
}
